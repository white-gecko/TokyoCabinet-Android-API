/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class tokyocabinet_BDB */

#ifndef _Included_tokyocabinet_BDB
#define _Included_tokyocabinet_BDB
#ifdef __cplusplus
extern "C" {
#endif
#undef tokyocabinet_BDB_ESUCCESS
#define tokyocabinet_BDB_ESUCCESS 0L
#undef tokyocabinet_BDB_ETHREAD
#define tokyocabinet_BDB_ETHREAD 1L
#undef tokyocabinet_BDB_EINVALID
#define tokyocabinet_BDB_EINVALID 2L
#undef tokyocabinet_BDB_ENOFILE
#define tokyocabinet_BDB_ENOFILE 3L
#undef tokyocabinet_BDB_ENOPERM
#define tokyocabinet_BDB_ENOPERM 4L
#undef tokyocabinet_BDB_EMETA
#define tokyocabinet_BDB_EMETA 5L
#undef tokyocabinet_BDB_ERHEAD
#define tokyocabinet_BDB_ERHEAD 6L
#undef tokyocabinet_BDB_EOPEN
#define tokyocabinet_BDB_EOPEN 7L
#undef tokyocabinet_BDB_ECLOSE
#define tokyocabinet_BDB_ECLOSE 8L
#undef tokyocabinet_BDB_ETRUNC
#define tokyocabinet_BDB_ETRUNC 9L
#undef tokyocabinet_BDB_ESYNC
#define tokyocabinet_BDB_ESYNC 10L
#undef tokyocabinet_BDB_ESTAT
#define tokyocabinet_BDB_ESTAT 11L
#undef tokyocabinet_BDB_ESEEK
#define tokyocabinet_BDB_ESEEK 12L
#undef tokyocabinet_BDB_EREAD
#define tokyocabinet_BDB_EREAD 13L
#undef tokyocabinet_BDB_EWRITE
#define tokyocabinet_BDB_EWRITE 14L
#undef tokyocabinet_BDB_EMMAP
#define tokyocabinet_BDB_EMMAP 15L
#undef tokyocabinet_BDB_ELOCK
#define tokyocabinet_BDB_ELOCK 16L
#undef tokyocabinet_BDB_EUNLINK
#define tokyocabinet_BDB_EUNLINK 17L
#undef tokyocabinet_BDB_ERENAME
#define tokyocabinet_BDB_ERENAME 18L
#undef tokyocabinet_BDB_EMKDIR
#define tokyocabinet_BDB_EMKDIR 19L
#undef tokyocabinet_BDB_ERMDIR
#define tokyocabinet_BDB_ERMDIR 20L
#undef tokyocabinet_BDB_EKEEP
#define tokyocabinet_BDB_EKEEP 21L
#undef tokyocabinet_BDB_ENOREC
#define tokyocabinet_BDB_ENOREC 22L
#undef tokyocabinet_BDB_EMISC
#define tokyocabinet_BDB_EMISC 9999L
#undef tokyocabinet_BDB_CMPLEXICAL
#define tokyocabinet_BDB_CMPLEXICAL 0L
#undef tokyocabinet_BDB_CMPDECIMAL
#define tokyocabinet_BDB_CMPDECIMAL 1L
#undef tokyocabinet_BDB_CMPINT32
#define tokyocabinet_BDB_CMPINT32 2L
#undef tokyocabinet_BDB_CMPINT64
#define tokyocabinet_BDB_CMPINT64 3L
#undef tokyocabinet_BDB_TLARGE
#define tokyocabinet_BDB_TLARGE 1L
#undef tokyocabinet_BDB_TDEFLATE
#define tokyocabinet_BDB_TDEFLATE 2L
#undef tokyocabinet_BDB_TBZIP
#define tokyocabinet_BDB_TBZIP 4L
#undef tokyocabinet_BDB_TTCBS
#define tokyocabinet_BDB_TTCBS 8L
#undef tokyocabinet_BDB_OREADER
#define tokyocabinet_BDB_OREADER 1L
#undef tokyocabinet_BDB_OWRITER
#define tokyocabinet_BDB_OWRITER 2L
#undef tokyocabinet_BDB_OCREAT
#define tokyocabinet_BDB_OCREAT 4L
#undef tokyocabinet_BDB_OTRUNC
#define tokyocabinet_BDB_OTRUNC 8L
#undef tokyocabinet_BDB_ONOLCK
#define tokyocabinet_BDB_ONOLCK 16L
#undef tokyocabinet_BDB_OLCKNB
#define tokyocabinet_BDB_OLCKNB 32L
#undef tokyocabinet_BDB_OTSYNC
#define tokyocabinet_BDB_OTSYNC 64L
/*
 * Class:     tokyocabinet_BDB
 * Method:    errmsg
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_tokyocabinet_BDB_errmsg
  (JNIEnv *, jclass, jint);

/*
 * Class:     tokyocabinet_BDB
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_tokyocabinet_BDB_init
  (JNIEnv *, jclass);

/*
 * Class:     tokyocabinet_BDB
 * Method:    ecode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_tokyocabinet_BDB_ecode
  (JNIEnv *, jobject);

/*
 * Class:     tokyocabinet_BDB
 * Method:    setcomparator
 * Signature: (Ltokyocabinet/BDBCMP;)Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_setcomparator
  (JNIEnv *, jobject, jobject);

/*
 * Class:     tokyocabinet_BDB
 * Method:    setcmpfunc
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_setcmpfunc
  (JNIEnv *, jobject, jint);

/*
 * Class:     tokyocabinet_BDB
 * Method:    tune
 * Signature: (IIJIII)Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_tune
  (JNIEnv *, jobject, jint, jint, jlong, jint, jint, jint);

/*
 * Class:     tokyocabinet_BDB
 * Method:    setcache
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_setcache
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     tokyocabinet_BDB
 * Method:    setxmsiz
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_setxmsiz
  (JNIEnv *, jobject, jlong);

/*
 * Class:     tokyocabinet_BDB
 * Method:    setdfunit
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_setdfunit
  (JNIEnv *, jobject, jint);

/*
 * Class:     tokyocabinet_BDB
 * Method:    open
 * Signature: (Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_open
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     tokyocabinet_BDB
 * Method:    close
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_close
  (JNIEnv *, jobject);

/*
 * Class:     tokyocabinet_BDB
 * Method:    put
 * Signature: ([B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_put
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     tokyocabinet_BDB
 * Method:    putkeep
 * Signature: ([B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_putkeep
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     tokyocabinet_BDB
 * Method:    putcat
 * Signature: ([B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_putcat
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     tokyocabinet_BDB
 * Method:    putdup
 * Signature: ([B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_putdup
  (JNIEnv *, jobject, jbyteArray, jbyteArray);

/*
 * Class:     tokyocabinet_BDB
 * Method:    putlist
 * Signature: ([BLjava/util/List;)Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_putlist
  (JNIEnv *, jobject, jbyteArray, jobject);

/*
 * Class:     tokyocabinet_BDB
 * Method:    out
 * Signature: ([B)Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_out
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     tokyocabinet_BDB
 * Method:    outlist
 * Signature: ([B)Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_outlist
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     tokyocabinet_BDB
 * Method:    get
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_tokyocabinet_BDB_get
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     tokyocabinet_BDB
 * Method:    getlist
 * Signature: ([B)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_tokyocabinet_BDB_getlist
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     tokyocabinet_BDB
 * Method:    vnum
 * Signature: ([B)I
 */
JNIEXPORT jint JNICALL Java_tokyocabinet_BDB_vnum
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     tokyocabinet_BDB
 * Method:    vsiz
 * Signature: ([B)I
 */
JNIEXPORT jint JNICALL Java_tokyocabinet_BDB_vsiz
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     tokyocabinet_BDB
 * Method:    range
 * Signature: ([BZ[BZI)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_tokyocabinet_BDB_range
  (JNIEnv *, jobject, jbyteArray, jboolean, jbyteArray, jboolean, jint);

/*
 * Class:     tokyocabinet_BDB
 * Method:    fwmkeys
 * Signature: ([BI)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_tokyocabinet_BDB_fwmkeys
  (JNIEnv *, jobject, jbyteArray, jint);

/*
 * Class:     tokyocabinet_BDB
 * Method:    addint
 * Signature: ([BI)I
 */
JNIEXPORT jint JNICALL Java_tokyocabinet_BDB_addint
  (JNIEnv *, jobject, jbyteArray, jint);

/*
 * Class:     tokyocabinet_BDB
 * Method:    adddouble
 * Signature: ([BD)D
 */
JNIEXPORT jdouble JNICALL Java_tokyocabinet_BDB_adddouble
  (JNIEnv *, jobject, jbyteArray, jdouble);

/*
 * Class:     tokyocabinet_BDB
 * Method:    sync
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_sync
  (JNIEnv *, jobject);

/*
 * Class:     tokyocabinet_BDB
 * Method:    optimize
 * Signature: (IIJIII)Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_optimize
  (JNIEnv *, jobject, jint, jint, jlong, jint, jint, jint);

/*
 * Class:     tokyocabinet_BDB
 * Method:    vanish
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_vanish
  (JNIEnv *, jobject);

/*
 * Class:     tokyocabinet_BDB
 * Method:    copy
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_copy
  (JNIEnv *, jobject, jstring);

/*
 * Class:     tokyocabinet_BDB
 * Method:    tranbegin
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_tranbegin
  (JNIEnv *, jobject);

/*
 * Class:     tokyocabinet_BDB
 * Method:    trancommit
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_trancommit
  (JNIEnv *, jobject);

/*
 * Class:     tokyocabinet_BDB
 * Method:    tranabort
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_tokyocabinet_BDB_tranabort
  (JNIEnv *, jobject);

/*
 * Class:     tokyocabinet_BDB
 * Method:    path
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_tokyocabinet_BDB_path
  (JNIEnv *, jobject);

/*
 * Class:     tokyocabinet_BDB
 * Method:    rnum
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_tokyocabinet_BDB_rnum
  (JNIEnv *, jobject);

/*
 * Class:     tokyocabinet_BDB
 * Method:    fsiz
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_tokyocabinet_BDB_fsiz
  (JNIEnv *, jobject);

/*
 * Class:     tokyocabinet_BDB
 * Method:    initialize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_tokyocabinet_BDB_initialize
  (JNIEnv *, jobject);

/*
 * Class:     tokyocabinet_BDB
 * Method:    destruct
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_tokyocabinet_BDB_destruct
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
